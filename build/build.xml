<?xml version="1.0"?>
<!--
	Akeeba CMS Update build file for Phing
	written by Nicholas K. Dionysopoulos
	
	Run "phing" from the build directory to build the component and plugins
-->
<project name="AkeebaCMSUpdate" description="Akeeba CMS Update" default="git" >
	<property file="./build.properties" />
	<!-- Default properties, set only if not already assigned in the build.properties file -->
	<property name="dirs.root" value=".." />
	<property name="dirs.component" value="../component" />
	<property name="dirs.languages" value="../component/translation" />
	<property name="dirs.modules" value="../modules" />
	<property name="dirs.plugins" value="../plugins" />
	<property name="dirs.release" value="../release" />
	<property name="version" value="git" />

	<property name="dirs.bin" value="bin" />
	<property name="dirs.bin.libxml" value="${dirs.bin}/libxml" />
	<property name="dirs.bin.fop" value="${dirs.bin}/fop" />
	<property name="dirs.bin.dbxsl" value="${dirs.bin}/dbxsl" />
	<property name="dirs.bin.release" value="../release" />
	<property name="dirs.documentation" value="../documentation" />

	<taskdef name="zipme" classname="phingext.ZipmeTask" />
	<taskdef name="gitversion" classname="phingext.GitVersionTask" />

	<!--
	====================================================================================================
	File sets
	====================================================================================================
	-->
	<fileset dir="${dirs.component}" id="component">
		<include name="**" />
        <exclude name="backend/restoration.php" />
	</fileset>	

	<!--
	====================================================================================================
	Tasks - General
	====================================================================================================
	-->
	
	<target name="git" description="Makes basic stuff"
		depends="new-release,setup-properties,component-package">
	</target>
	
	<target name="all" description="Makes everything"
		depends="git,doc-j-pdf,lang">
	</target>

	<target name="new-release" description="Empty the release directory">
		<!-- Recreate the release directory -->
		<delete quiet="yes" includeemptydirs="true">
			<fileset dir="${dirs.release}/">
				<include name="*.zip" />
				<include name="*.pdf" />
				<include name="*.fo" />
			</fileset>
		</delete>
	</target>
	
	<target name="setup-properties" description="Set up version and build properties">
		<!-- Initialize the build.date timestamp -->
		<tstamp>
			<format property="build.date" pattern="%Y-%m-%d" />
		</tstamp>

		<!-- Initialize the version if it's not set -->
		<if>
			<equals arg1="${version}" arg2="git" />
			<then>
				<gitversion workingcopy="${dirs.root}" propertyname="git.lastrevision" />
				<property name="version" value="rev${git.lastrevision}" override="true" />
			</then>
		</if>
	</target>

	<!--
	====================================================================================================
	Tasks - Joomla! packages
	====================================================================================================
	-->
	
	<target name="component-package" description="Component package build"
		depends="new-release,setup-properties">
		<!-- Create the package -->
		<copy file="./templates/cmsupdate.xml" tofile="${dirs.component}/cmsupdate.xml" overwrite="true">
			<filterchain>
				<replacetokens begintoken="##" endtoken="##">
					<token key="DATE" value="${build.date}" />
					<token key="VERSION" value="${version}" />
				</replacetokens>				
			</filterchain>
		</copy>
		
		<zipme basedir="${dirs.component}" destfile="${dirs.release}/com_cmsupdate-${version}.zip" includeemptydirs="true">
			<fileset refid="component" />
		</zipme>
		<zipme basedir="${dirs.plugins}" prefix="plugins/" destfile="${dirs.release}/com_cmsupdate-${version}.zip" includeemptydirs="true">
			<fileset dir="${dirs.plugins}">
				<include name="**" />
			</fileset>
		</zipme>
		<zipme basedir="${dirs.modules}" prefix="modules/" destfile="${dirs.release}/com_cmsupdate-${version}.zip" includeemptydirs="true">
			<fileset dir="${dirs.modules}">
				<include name="**" />
			</fileset>
		</zipme>
	</target>

	<target name="doc-j-pdf" description="Documentation for Joomla! in PDF format">
		<exec command="xsltproc --nonet --xinclude --novalid --stringparam body.start.indent 0 --stringparam variablelist.term.break.after 1 --stringparam variablelist.term.separator &quot;&quot; --stringparam variablelist.max.termlength 12 --stringparam section.autolabel 1 --stringparam toc.section.depth 5 --stringparam fop1.extensions 1 --output ${dirs.bin.release}/cmsupdate.fo ${dirs.bin.dbxsl}/fo/docbook.xsl ${dirs.documentation}/cmsupdate.xml" dir="${project.basedir}" />
		<exec command="${dirs.bin.fop}/fop -fo ${dirs.bin.release}/cmsupdate.fo -pdf ${dirs.bin.release}/cmsupdate.pdf" logoutput="true" />
		<delete file="${dirs.release}/cmsupdate.fo" quiet="yes" />
	</target>

	<!--
	====================================================================================================
	Tasks - Project management
	====================================================================================================
	-->

    <target name="link" description="Internal linker">
        <exec command="php ../buildfiles/tools/link.php ${application.startdir}/.." dir="${application.startdir}/.." passthru="true" />
        <exec command="php ../buildfiles/tools/langlink.php ${application.startdir}/.." dir="${application.startdir}/.." passthru="true" />
    </target>

    <target name="relink" description="Project relinker">
        <exec command="php ../buildfiles/tools/relink.php ${site} ${application.startdir}/.." dir="${application.startdir}/.." passthru="true" />
        <exec command="php ../buildfiles/tools/relinklang.php ${site} ${application.startdir}/.." dir="${application.startdir}/.." passthru="true" />
    </target>

    <target name="release" depends="setup-properties" description="Upload the release to AkeebaBackup.com">
        <copy file="./templates/release.json" tofile="${dirs.root}/release.json" overwrite="true">
            <filterchain id="standard-tokens">
                <replacetokens begintoken="##" endtoken="##">
                    <token key="DATE" value="${build.date}" />
                    <token key="VERSION" value="${version}" />
                    <token key="RELEASEDIR" value="${phing.dir}/${dirs.release}" />
                    <token key="REPODIR" value="${phing.dir}/${dirs.root}" />
                </replacetokens>
            </filterchain>
        </copy>

        <exec command="php ${project.basedir}/../../releasemaker/releasemaker/index.php ${project.basedir}/../release.json" dir="${project.basedir}" passthru="true" />

        <delete file="${dirs.root}/release.json" quiet="yes" />
    </target>

    <target name="lang" description="Generate and upload language files">
        <exec command="php ./buildlang.php ${application.startdir}/build.properties ${application.startdir}/.. ${version}" dir="buildlang" passthru="true" />
    </target>
	
	<target name="release" depends="setup-properties" description="Upload the release to AkeebaBackup.com">
		<copy file="./templates/release.json" tofile="${dirs.root}/release.json" overwrite="true">
			<filterchain id="standard-tokens">
				<replacetokens begintoken="##" endtoken="##">
					<token key="DATE" value="${build.date}" />
					<token key="VERSION" value="${version}" />
					<token key="RELEASEDIR" value="${phing.dir}/${dirs.release}" />
					<token key="REPODIR" value="${phing.dir}/${dirs.root}" />
				</replacetokens>
			</filterchain>
		</copy>

		<exec command="php ${project.basedir}/../../releasemaker/releasemaker/index.php ${project.basedir}/../release.json" dir="${project.basedir}" passthru="true" />

		<delete file="${dirs.root}/release.json" quiet="yes" />
	</target>

	<target name="ftpdeploy" depends="git,lang">
		<gitversion workingcopy="${dirs.root}" propertyname="git.lastrevision" />
		<echo>Uploading test release</echo>
		<ftpdeploy
			host="${ftp.host}"
			port="${ftp.port}"
			username="${ftp.username}"
			password="${ftp.password}"
			dir="${ftp.dir}/cmsupdate/${git.lastrevision}"
			mode="${ftp.mode}"
			passive="true"
			level="debug">
			<fileset dir="${dirs.root}">
				<include name="CHANGELOG"/>
			</fileset>			
			<fileset dir="${dirs.release}">
				<include name="com_cmsupdate*.zip"/>
			</fileset>			
		</ftpdeploy>
	</target>
	
	<target name="docsdeploy">
		<echo>Uploading CMS Update documentation</echo>
		<ftpdeploy
			host="${ftp.host}"
			port="${ftp.port}"
			username="${ftp.username}"
			password="${ftp.password}"
			dir="${ftp.dir.docs}/cmsupdate"
			mode="${ftp.mode}"
			passive="true"
			level="debug">
			<fileset dir="${dirs.documentation}">
				<include name="*.xml"/>
			</fileset>			
		</ftpdeploy>
	</target>
</project>
